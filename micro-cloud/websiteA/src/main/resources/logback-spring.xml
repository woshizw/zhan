<?xml version="1.0" encoding="UTF-8"?>  

<configuration>
	<springProperty scope="context" name="logPath" source="log.path"/>
	<springProperty scope="context" name="logLevel" source="log.level"/>
	<include resource="org/springframework/boot/logging/logback/defaults.xml"/>
	<property name="CONSOLE_LOG_PATTERN"
			  value="%clr(%d{yyyy-MM-dd HH:mm:ss.SSS}){faint} %X{X-B3-TraceId:-} %clr(${LOG_LEVEL_PATTERN:-%5p}) %clr(${PID:- }){magenta} %clr(---){faint} %clr([%15.15t]){faint} %clr(%-40.40logger{39}){cyan} %clr(:){faint} %m%n${LOG_EXCEPTION_CONVERSION_WORD:-%wEx}"/>
   
   
    <!-- 控制台输出 -->   
    <appender name="STDOUT" class="ch.qos.logback.core.ConsoleAppender">
        <encoder class="ch.qos.logback.classic.encoder.PatternLayoutEncoder"> 
             <!--格式化输出：%d表示日期，%thread表示线程名，%-5level：级别从左显示5个字符宽度%msg：日志消息，%n是换行符--> 
            <pattern>${CONSOLE_LOG_PATTERN}</pattern>   
        </encoder> 
    </appender>
    
    <!-- DEBUG级别日志 appender -->  
    <appender name="DEBUG_FILE" class="ch.qos.logback.core.rolling.RollingFileAppender">  
        <!-- 过滤器，只记录DEBUG级别的日志 -->  
        <filter class="ch.qos.logback.classic.filter.LevelFilter">  
            <level>DEBUG</level>  
        </filter>  
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">  
            <!-- 按天回滚 daily -->  
            <fileNamePattern>${logPath}/passport-controller.log.%d{yyyy-MM-dd}</fileNamePattern>  
        </rollingPolicy>  
        <encoder>  
             <pattern>${CONSOLE_LOG_PATTERN}</pattern>  
        </encoder>  
    </appender>
    
    
    <!-- ERROR级别日志 -->  
    <!-- 滚动记录文件，先将日志记录到指定文件，当符合某个条件时，将日志记录到其他文件 RollingFileAppender-->  
    <appender name="ERROR_FILE" class="ch.qos.logback.core.rolling.RollingFileAppender">  
        <!-- 过滤器，只记录WARN级别的日志 -->  
        <filter class="ch.qos.logback.classic.filter.LevelFilter">  
            <level>ERROR</level>  
            <onMatch>ACCEPT</onMatch>  
            <onMismatch>DENY</onMismatch>  
        </filter>  
        <!-- 最常用的滚动策略，它根据时间来制定滚动策略.既负责滚动也负责出发滚动 -->  
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">  
            <!--日志输出位置  可相对、和绝对路径 -->  
            <fileNamePattern>${logPath}/passport-controller-error.log.%d{yyyy-MM-dd}</fileNamePattern>  
        </rollingPolicy>  
          
        <!-- 按照固定窗口模式生成日志文件，当文件大于20MB时，生成新的日志文件。窗口大小是1到3，当保存了3个归档文件后，将覆盖最早的日志。   
        <rollingPolicy class="ch.qos.logback.core.rolling.FixedWindowRollingPolicy">     
          <fileNamePattern>${log_dir}/%d{yyyy-MM-dd}/.log.zip</fileNamePattern>     
          <minIndex>1</minIndex>     
          <maxIndex>3</maxIndex>     
        </rollingPolicy>   -->  
        <!-- 查看当前活动文件的大小，如果超过指定大小会告知RollingFileAppender 触发当前活动文件滚动   
        <triggeringPolicy class="ch.qos.logback.core.rolling.SizeBasedTriggeringPolicy">     
            <maxFileSize>5MB</maxFileSize>     
        </triggeringPolicy>   -->  
          
        <encoder>  
            <pattern>${CONSOLE_LOG_PATTERN}</pattern>  
        </encoder>  
    </appender> 
    
      <!-- 异步输出 -->  
     <appender name ="DEBUG_FILE_ASYNC" class= "ch.qos.logback.classic.AsyncAppender">  
            <discardingThreshold >0</discardingThreshold>  
            <queueSize>512</queueSize>  
         <appender-ref ref ="DEBUG_FILE"/>  
     </appender>  
     
	 <!--
     <logger name="org.mybatis.spring.SqlSessionUtils" level="INFO" additivity="false">
    	<appender-ref ref="DEBUG_FILE_ASYNC" /> 
    	<appender-ref ref="STDOUT" /> 
    </logger>
    
     <logger name="org.mybatis.spring.transaction.SpringManagedTransaction" level="INFO" additivity="false">
    	<appender-ref ref="DEBUG_FILE_ASYNC" /> 
    	<appender-ref ref="STDOUT" /> 
    </logger>
    
    <logger name="org.apache.ibatis.logging.jdbc.ConnectionLogger.init" level="INFO"  additivity="false">
    	<appender-ref ref="DEBUG_FILE_ASYNC" /> 
    	<appender-ref ref="STDOUT" /> 
    </logger>

	-->
    
      <root level="info">
       <appender-ref ref="STDOUT" />  -->
        <appender-ref ref="DEBUG_FILE_ASYNC" />
        <appender-ref ref="ERROR_FILE" />
    </root> 
    
   
</configuration>